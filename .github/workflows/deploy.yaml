name: deploy
run-name: Deploy
on: push

permissions:
  contents: read
  packages: read

jobs:
  deploy-to-cloudflare-pages:
    name: Deploy to CF Pages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 18 ]
    timeout-minutes: 5

    steps:
      - name: Checkout ðŸ””
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # - uses: actions/cache@v3
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      - name: Create a robots.txt file to stop the site from being indexed
        run: |
          echo 'User-agent: * Disallow: /' > apps/website1/public/robots.txt

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app
        run: pnpm build --filter=website1
        env:
          NITRO_PRESET: cloudflare_pages

      - name: Deploy code to Cloudflare Pages
        working-directory: apps/website1
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: npx wrangler --project-name opengine-monorepo-poc pages deploy dist
